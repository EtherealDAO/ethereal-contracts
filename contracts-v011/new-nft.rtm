CALL_METHOD
  Address("account_sim1cyd08zuxt0kmuddmwlagas6g8g4x65w2sd4dfncfp7dha8augly08k")
  "lock_fee"
  Decimal("10");

CREATE_NON_FUNGIBLE_RESOURCE
  Enum<OwnerRole::None>()
  Enum<NonFungibleIdType::Integer>()
  true
  Tuple(Tuple(Array<Enum>(), Array<Tuple>(), Array<Enum>()), Enum<0u8>(66u8), Array<String>())        # Non Fungible Data Schema
  Tuple(
      Some(         # Mint Roles (if None: defaults to DenyAll, DenyAll)
          Tuple(
              Some(Enum<AccessRule::AllowAll>()),  # Minter (if None: defaults to Owner)
              Some(Enum<AccessRule::DenyAll>())    # Minter Updater (if None: defaults to Owner)
          )
      ),
      None,        # Burn Roles (if None: defaults to DenyAll, DenyAll)
      None,        # Freeze Roles (if None: defaults to DenyAll, DenyAll)
      None,        # Recall Roles (if None: defaults to DenyAll, DenyAll)
      None,        # Withdraw Roles (if None: defaults to AllowAll, DenyAll)
      None,        # Deposit Roles (if None: defaults to AllowAll, DenyAll)
      None         # Non Fungible Data Update Roles (if None: defaults to DenyAll, DenyAll)
  )
  Tuple(                                                                   # Metadata initialization
      Map<String, Tuple>(                                                  # Initial metadata values
          "name" => Tuple(
              Some(Enum<Metadata::String>("MyResource")),                  # Resource Name
              true                                                         # Locked
          )
      ),
      Map<String, Enum>(                                                   # Metadata roles
          "metadata_setter" => Some(Enum<AccessRule::AllowAll>()),         # Metadata setter role
          "metadata_setter_updater" => None,                               # Metadata setter updater role as None defaults to OWNER
          "metadata_locker" => Some(Enum<AccessRule::DenyAll>()),          # Metadata locker role
          "metadata_locker_updater" => None                                # Metadata locker updater role as None defaults to OWNER
      )
  )
  None; 
